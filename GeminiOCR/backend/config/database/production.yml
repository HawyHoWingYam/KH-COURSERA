# Production AWS Aurora PostgreSQL Database Configuration
# 生产环境数据库配置 - 高性能、高可用、高安全性

database:
  # Aurora cluster endpoints (populated by Terraform)
  host: "${AURORA_WRITER_ENDPOINT}"
  readonly_host: "${AURORA_READER_ENDPOINT}"
  port: 5432
  database: "hya_ocr"
  username: "${DATABASE_USERNAME}"
  password: "${DATABASE_PASSWORD}"
  
  # Connection pool settings optimized for production load
  pool_size: 20
  max_overflow: 50
  pool_timeout: 30
  pool_recycle: 3600  # 1 hour
  pool_pre_ping: true
  
  # Production settings - no debugging
  echo: false
  echo_pool: false
  
  # SSL settings (enforced for Aurora)
  ssl_mode: "require"
  ssl_ca_cert_path: "/opt/rds-ca-2019-root.pem"
  
  # Connection options
  options:
    client_encoding: "utf8"
    timezone: "Asia/Singapore"
    application_name: "gemini-ocr-production"
    
# Environment-specific settings
environment:
  name: "production"
  debug: false
  log_level: "WARN"  # Only warnings and errors in production
  
# Features enabled in production environment
features:
  auto_migrate: false  # Manual migration approval required
  seed_data: false
  reset_on_start: false
  read_replica: true
  performance_insights: true
  query_optimization: true
  
# Backup settings
backup:
  enabled: true
  retention_days: 30
  point_in_time_recovery: true
  cross_region_backup: true
  backup_encryption: true
  
# Monitoring settings
monitoring:
  enabled: true
  slow_query_threshold: 1.0  # Log queries slower than 1 second
  connection_monitoring: true
  performance_insights: true
  detailed_monitoring: true
  custom_metrics: true
  
# AWS-specific settings
aws:
  region: "ap-southeast-1"
  secrets_manager:
    enabled: true
    secret_arn: "${DATABASE_SECRET_ARN}"
    auto_rotation: true
    rotation_schedule: 30  # days
  cloudwatch:
    enabled: true
    log_group: "/aws/rds/cluster/production-hya-ocr-aurora-postgresql/postgresql"
    detailed_monitoring: true
  parameter_store:
    enabled: true
    prefix: "/hya-ocr/production/database/"
    encryption: true
    
# High availability settings
ha:
  connection_retry_attempts: 5
  connection_retry_delay: 3
  failover_timeout: 30
  health_check_interval: 15
  circuit_breaker:
    enabled: true
    failure_threshold: 3
    recovery_timeout: 120
  disaster_recovery:
    enabled: true
    rpo_target: 300  # 5 minutes
    rto_target: 900  # 15 minutes
  
# Performance settings
performance:
  statement_timeout: 30000  # 30 seconds
  idle_in_transaction_session_timeout: 300000  # 5 minutes
  max_connections_per_instance: 200
  connection_lifetime: 1800  # 30 minutes
  query_timeout: 30000
  
# Security settings
security:
  require_ssl: true
  verify_ssl_cert: true
  allowed_hosts:
    - "*.ap-southeast-1.rds.amazonaws.com"
  encrypt_credentials: true
  audit_logging: true
  access_logging: true
  
# Load balancing for read operations
load_balancing:
  read_write_split: true
  read_weight: 80  # 80% read, 20% write
  sticky_sessions: false
  intelligent_routing: true
  
# Caching settings
cache:
  query_cache_enabled: true
  cache_ttl: 600  # 10 minutes
  max_cache_size: "512MB"
  distributed_cache: true
  
# Rate limiting
rate_limiting:
  enabled: true
  max_connections_per_user: 50
  max_queries_per_minute: 1000
  burst_allowance: 100
  
# Alerting thresholds
alerts:
  cpu_threshold: 75
  connection_threshold: 80
  slow_query_threshold: 1.0
  error_rate_threshold: 1  # 1% error rate
  availability_threshold: 99.9
  
# Compliance and auditing
compliance:
  audit_trail: true
  data_retention_policy: 2555  # 7 years in days
  encryption_at_rest: true
  encryption_in_transit: true
  pii_protection: true
  
# Connection string templates
connection_string: "postgresql://{username}:{password}@{host}:{port}/{database}?sslmode={ssl_mode}&application_name={application_name}&statement_timeout={statement_timeout}&connect_timeout=10"
readonly_connection_string: "postgresql://{username}:{password}@{readonly_host}:{port}/{database}?sslmode={ssl_mode}&application_name={application_name}-readonly&statement_timeout={statement_timeout}"