# Sandbox AWS Aurora PostgreSQL Database Configuration
# Sandbox环境数据库配置 - 用于开发和集成测试

database:
  # Aurora cluster endpoints (will be populated by Terraform outputs)
  host: "${AURORA_WRITER_ENDPOINT}"
  readonly_host: "${AURORA_READER_ENDPOINT}"
  port: 5432
  database: "hya_ocr"
  username: "${DATABASE_USERNAME}"
  password: "${DATABASE_PASSWORD}"
  
  # Connection pool settings for shared environment
  pool_size: 10
  max_overflow: 20
  pool_timeout: 30
  pool_recycle: 3600
  pool_pre_ping: true  # Validate connections before use
  
  # Aurora-specific settings
  echo: false  # Disable SQL logging in shared environment
  echo_pool: false
  
  # SSL settings (required for Aurora)
  ssl_mode: "require"
  ssl_ca_cert_path: "/opt/rds-ca-2019-root.pem"
  
  # Connection options
  options:
    client_encoding: "utf8"
    timezone: "Asia/Singapore"
    application_name: "gemini-ocr-sandbox"
    
# Environment-specific settings
environment:
  name: "sandbox"
  debug: false
  log_level: "INFO"
  
# Features enabled in sandbox environment
features:
  auto_migrate: true  # Auto-migrate on deployment
  seed_data: false    # No seed data in sandbox
  reset_on_start: false
  read_replica: true  # Use read replicas for read operations
  
# Backup settings
backup:
  enabled: true
  retention_days: 7
  
# Monitoring settings
monitoring:
  enabled: true
  slow_query_threshold: 2.0  # Log queries slower than 2 seconds
  connection_monitoring: true
  
# AWS-specific settings
aws:
  region: "ap-southeast-1"
  secrets_manager:
    enabled: true
    secret_arn: "${DATABASE_SECRET_ARN}"
  cloudwatch:
    enabled: true
    log_group: "/aws/rds/cluster/sandbox-hya-ocr-aurora-postgresql/postgresql"
    
# High availability settings
ha:
  connection_retry_attempts: 3
  connection_retry_delay: 1
  failover_timeout: 30
  health_check_interval: 60
  
# Performance settings
performance:
  statement_timeout: 30000  # 30 seconds
  idle_in_transaction_session_timeout: 300000  # 5 minutes
  max_connections_per_instance: 100
  
# Security settings
security:
  require_ssl: true
  verify_ssl_cert: true
  allowed_hosts:
    - "*.ap-southeast-1.rds.amazonaws.com"
    
# Connection string templates
connection_string: "postgresql://{username}:{password}@{host}:{port}/{database}?sslmode={ssl_mode}&application_name={application_name}"
readonly_connection_string: "postgresql://{username}:{password}@{readonly_host}:{port}/{database}?sslmode={ssl_mode}&application_name={application_name}-readonly"